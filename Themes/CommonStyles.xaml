<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <sys:String x:Key="PingTabHeader">Ping</sys:String>
    <sys:String x:Key="TraceRouteTabHeader">Traceroute</sys:String>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <ControlTemplate x:Key="SubMenuStyleTemplate" TargetType="MenuItem">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="4">
            <Grid>
                <ContentPresenter Content="{TemplateBinding Header}"
                                  Margin="4,2"
                                  VerticalAlignment="Center"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="MenuItem">
        <Grid>
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="4"
                    SnapsToDevicePixels="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                      Content="{TemplateBinding Icon}"
                                      Margin="4,0,6,0"
                                      VerticalAlignment="Center"
                                      Grid.Column="0"/>
                    <ContentPresenter Content="{TemplateBinding Header}"
                                      VerticalAlignment="Center"
                                      Grid.Column="1"/>
                    <Path x:Name="CheckMark"
                          Grid.Column="2"
                          Width="14"
                          Height="14"
                          Margin="6,0,4,0"
                          Data="M0,5 L3,9 L8,0"
                          Stroke="{DynamicResource MenuItemCheckmark}"
                          StrokeThickness="2"
                          Visibility="Collapsed"/>
                </Grid>
            </Border>
            <Popup x:Name="SubmenuPopup"
                   Placement="Right"
                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                   StaysOpen="False"
                   Focusable="False"
                   PopupAnimation="Fade">
                <Border Background="{DynamicResource SubmenuBackground}"
                        BorderBrush="{DynamicResource SubmenuBorder}"
                        BorderThickness="1"
                        CornerRadius="4">
                    <StackPanel IsItemsHost="True"/>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource PrimaryHoverBackground}"/>
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{DynamicResource PrimaryHoverBorder}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource MenuItemHoverForeground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource PrimaryPressedBackground}"/>
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{DynamicResource PrimaryButtonPressedBorder}"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility"
                        Value="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent},
                        Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Border" Property="Background"
                        Value="{DynamicResource SubmenuOpenBackground}"/>
                <Setter TargetName="SubmenuPopup" Property="IsOpen" Value="True"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="BaseButtonStyle" TargetType="Button">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,6,0,6"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="buttonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BaseDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource DataGridBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGridForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="{DynamicResource DataGridRowBackground}"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource DataGridAlternatingRowBackground}"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGridLinesBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGridLinesBrush}"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
    </Style>

    <Style x:Key="BaseTextStyle" TargetType="Control">
    </Style>

    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource TextBlockForeground}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <Style x:Key="BaseMenuStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource MenuItemForeground}"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="BaseContentBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource ContentBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContentBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="buttonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="{DynamicResource PrimaryButtonHoverBackground}"/>
                            <Setter TargetName="buttonBorder" Property="BorderBrush" Value="{DynamicResource PrimaryButtonHoverBorder}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonBorder" Property="Background" Value="{DynamicResource PrimaryButtonPressedBackground}"/>
                            <Setter TargetName="buttonBorder" Property="BorderBrush" Value="{DynamicResource PrimaryButtonPressedBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="buttonBorder" Property="Background" Value="{DynamicResource DisabledButtonBackground}"/>
                            <Setter TargetName="buttonBorder" Property="BorderBrush" Value="{DynamicResource DisabledButtonBorder}"/>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledButtonForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource BaseDataGridStyle}">
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}"/>
        <Setter Property="Padding" Value="10,5"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridHeaderBorder}"/>
        <Setter Property="BorderThickness" Value="0,0,1,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LabelStyle" TargetType="Label" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource LabelForeground}"/>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource ProgressBarForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ProgressBarBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ProgressBarBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="TextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxForeground}"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="SubMenuStyleDefinition" TargetType="MenuItem" BasedOn="{StaticResource BaseMenuStyle}">
        <Setter Property="Background" Value="{DynamicResource SubmenuBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SubmenuBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Template" Value="{StaticResource SubMenuStyleTemplate}"/>
    </Style>


    <Style x:Key="MenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource BaseMenuStyle}">
        <Setter Property="Template" Value="{StaticResource MenuItemControlTemplate}"/>
    </Style>


    <Style x:Key="HeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource HeaderForeground}"/>
    </Style>

    <Style x:Key="ContentBorderStyle" TargetType="Border" BasedOn="{StaticResource BaseContentBorderStyle}">
    </Style>

    <Style x:Key="WarningImageStyle" TargetType="Image">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="ToolTip" Value="{DynamicResource ValidationToolTip}"/>
    </Style>

    <Style x:Key="ResultsTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource BaseTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource ResultsTextForeground}"/>
        <Setter Property="Background" Value="{DynamicResource ResultsBackground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel Grid.Row="0"
                                  Background="{DynamicResource TabHeaderBackground}"
                                  IsItemsHost="True"
                                  Margin="0,0,0,2"/>
                        <Border Grid.Row="1"
                                Style="{StaticResource BaseContentBorderStyle}">
                            <ContentPresenter ContentSource="SelectedContent" Margin="10"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource TabItemForeground}"/>
        <Setter Property="Padding" Value="10,4"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="4">
                        <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="12,4"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SelectedTabBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource SelectedTabForeground}"/>
                            <Setter Property="Panel.ZIndex" Value="100"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource HoverTabBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>