<Window x:Class="PingTestTool.TraceWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Трассировка маршрута"
        Height="600" Width="800"
        Background="#1E1E1E"
        MinWidth="800" MinHeight="600"
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <!-- Стили кнопок с анимациями -->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,6,0,6"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Background" Value="#0E639C"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#0E639C"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Анимация при наведении мыши -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1177BB"/>
                                <Setter Property="BorderBrush" Value="#1177BB"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                             From="1.0" To="1.05" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                             From="1.0" To="1.05" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                             From="1.05" To="1.0" Duration="0:0:0.1"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                             From="1.05" To="1.0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- Анимация при нажатии -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#0D5689"/>
                                <Setter Property="BorderBrush" Value="#0D5689"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                             From="1.05" To="0.95" Duration="0:0:0.05"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                             From="1.05" To="0.95" Duration="0:0:0.05"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                             From="0.95" To="1.0" Duration="0:0:0.05"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                             From="0.95" To="1.0" Duration="0:0:0.05"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <!-- Стиль для неактивной кнопки -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#4D4D4D"/>
                                <Setter Property="BorderBrush" Value="#4D4D4D"/>
                                <Setter Property="Foreground" Value="#A0A0A0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для DataGrid -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="#1E1E1E"/>
            <Setter Property="Foreground" Value="#D4D4D4"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowBackground" Value="#2D2D30"/>
            <Setter Property="AlternatingRowBackground" Value="#252526"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#3F3F46"/>
            <Setter Property="VerticalGridLinesBrush" Value="#3F3F46"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="ColumnHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#007ACC"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="Padding" Value="10,5"/>
                        <Setter Property="BorderBrush" Value="#3F3F46"/>
                        <Setter Property="BorderThickness" Value="0,0,1,0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="BorderBrush" Value="#3F3F46"/>
            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </Window.Resources>

    <Grid>
        <!-- Заголовок окна с тенью -->
        <Border Background="#007ACC" Height="50" VerticalAlignment="Top">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="2" BlurRadius="5" Opacity="0.5"/>
            </Border.Effect>
            <TextBlock Text="Трассировка маршрута" Foreground="White" FontSize="20" FontWeight="Bold" VerticalAlignment="Center" Margin="20,0"/>
        </Border>

        <!-- Добавляем CheckBox для включения/отключения комбинированного лога -->
        <CheckBox x:Name="chkCombinedLog" Content="Отладка" HorizontalAlignment="Left" Margin="20,70,0,0" VerticalAlignment="Top" Checked="OnCombinedLogChecked" Unchecked="OnCombinedLogUnchecked" Foreground="White" FontSize="12" />

        <!-- Основное содержимое -->
        <Grid Margin="0,100,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Статус -->
            <Border Background="#2D2D30" Padding="10" Margin="10,10,10,0">
                <TextBlock x:Name="StatusTextBlock" FontWeight="Bold" HorizontalAlignment="Center" FontSize="16" Foreground="#FF5555"/>
            </Border>

            <!-- Таблица -->
            <DataGrid x:Name="ResultsList" AutoGenerateColumns="False" Grid.Row="1" Margin="10" CanUserAddRows="False" CanUserDeleteRows="False" IsReadOnly="True"
                      VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Nr" Binding="{Binding Nr}" Width="40"/>
                    <DataGridTextColumn Header="IP Address" Binding="{Binding IPAddress}" Width="130"/>
                    <DataGridTextColumn Header="Domain Name" Binding="{Binding DomainName}" Width="*"/>
                    <DataGridTextColumn Header="Loss" Binding="{Binding Loss}" Width="60"/>
                    <DataGridTextColumn Header="Sent" Binding="{Binding Sent}" Width="60"/>
                    <DataGridTextColumn Header="Recv" Binding="{Binding Received}" Width="60"/>
                    <DataGridTextColumn Header="Best" Binding="{Binding Best}" Width="60"/>
                    <DataGridTextColumn Header="Last" Binding="{Binding Last}" Width="60"/>
                    <DataGridTextColumn Header="Avrg" Binding="{Binding Avrg}" Width="60"/>
                    <DataGridTextColumn Header="Wrst" Binding="{Binding Wrst}" Width="60"/>
                </DataGrid.Columns>
            </DataGrid>

            <!-- Кнопки управления -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,20,0,20" Grid.Row="2">
                <Button x:Name="btnStartTrace" Content="Начать трассировку" Style="{StaticResource ButtonStyle}" Click="BtnStartTrace_Click"/>
                <Button x:Name="btnStopTrace" Content="Остановить трассировку" Style="{StaticResource ButtonStyle}" Click="BtnStopTrace_Click" IsEnabled="False"/>
                <Button x:Name="btnClearResults" Content="Очистить результаты" Style="{StaticResource ButtonStyle}" Click="BtnClearResults_Click"/>
                <Button x:Name="btnSaveResults" Content="Сохранить результаты" Style="{StaticResource ButtonStyle}" Click="BtnSaveResults_Click"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>